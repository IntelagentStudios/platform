// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

model License {
  licenseKey         String    @id @map("license_key") @db.VarChar(20)
  email              String?   @db.VarChar(255)
  createdAt          DateTime? @map("created_at")
  usedAt             DateTime? @map("used_at")
  domain             String?   @db.VarChar(255)
  siteKey            String?   @unique @map("site_key") @db.VarChar(255)
  status             String?   @db.VarChar(20)
  subscriptionId     String?   @map("subscription_id") @db.VarChar(255)
  lastPaymentDate    DateTime? @map("last_payment_date")
  nextBillingDate    DateTime? @map("next_billing_date")
  subscriptionStatus String?   @map("subscription_status") @db.VarChar(50)
  customerName       String?   @map("customer_name") @db.VarChar(255)
  lastIndexed        DateTime? @map("last_indexed")
  plan               String?   @db.VarChar(50)
  products           String[]  @default([]) @db.Text
  
  chatbotLogs        ChatbotLog[]
  
  @@map("licenses")
  @@schema("public")
}

model ChatbotLog {
  id                Int       @id @default(autoincrement())
  sessionId         String?   @map("session_id") @db.VarChar(255)
  customerMessage   String?   @map("customer_message") @db.Text
  chatbotResponse   String?   @map("chatbot_response") @db.Text
  timestamp         DateTime? @db.Timestamp(6)
  intentDetected    String?   @map("intent_detected") @db.VarChar(255)
  conversationId    String?   @map("conversation_id") @db.VarChar(255)
  siteKey           String?   @map("site_key") @db.VarChar(255)
  domain            String?   @db.VarChar(255)
  userId            String?   @map("user_id") @db.VarChar(255)
  role              String?   @db.VarChar(50)
  content           String?   @db.Text
  createdAt         DateTime? @map("created_at") @db.Timestamp(6)
  
  license           License?  @relation(fields: [siteKey], references: [siteKey])
  
  @@map("chatbot_logs")
  @@schema("public")
}

model SharedItem {
  id          Int       @id @default(autoincrement())
  sharedBy    String    @map("shared_by") @db.VarChar(20)
  sharedWith  String    @map("shared_with") @db.VarChar(255)
  itemType    String    @map("item_type") @db.VarChar(50)
  itemConfig  Json      @map("item_config")
  expiresAt   DateTime? @map("expires_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  
  @@map("shared_items")
  @@schema("public")
}

model DomainLicense {
  domain      String  @db.VarChar(255)
  licenseKey  String  @map("license_key") @db.VarChar(20)
  productType String  @map("product_type") @db.VarChar(50)
  
  @@id([domain, licenseKey])
  @@map("domain_licenses")
  @@schema("public")
}

model SmartDashboardInsight {
  id            Int       @id @default(autoincrement())
  licenseKey    String    @map("license_key") @db.VarChar(20)
  insightType   String    @map("insight_type") @db.VarChar(50)
  title         String    @db.VarChar(255)
  content       String    @db.Text
  severity      String?   @db.VarChar(20)
  createdAt     DateTime  @default(now()) @map("created_at")
  expiresAt     DateTime? @map("expires_at")
  metadata      Json?
  
  @@map("smart_dashboard_insights")
  @@schema("public")
}

model SmartDashboardRequest {
  id            Int       @id @default(autoincrement())
  licenseKey    String    @map("license_key") @db.VarChar(20)
  requestType   String    @map("request_type") @db.VarChar(50)
  query         String    @db.Text
  response      String?   @db.Text
  createdAt     DateTime  @default(now()) @map("created_at")
  processedAt   DateTime? @map("processed_at")
  
  @@map("smart_dashboard_requests")
  @@schema("public")
}
